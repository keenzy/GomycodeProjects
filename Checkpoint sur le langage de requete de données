1)Implémenter le modèle de relation fourni à l’aide de SQL ( partie DDL )
    Create TABLE Customer ( 
      customer_id int PRIMARY key not null AUTO_INCREMENT, 
      customer_name varchar(255)  not null, 
      customer_tel varchar(13) not null 
    );
    CREATE TABLE Product (
      product_id int PRIMARY KEY not null AUTO_INCREMENT, 
      product_name varchar(255) not null, 
      category varchar(255) not null, 
      price float  not null
    );
    CREATE TABLE Orders( 
      customer_id int not null, 
      product_id int not null, 
      orderDate date, 
      quantity int, 
      total_amount float, 
      CONSTRAINT custOrd FOREIGN KEY (customer_id) REFERENCES customer (customer_id), 
      CONSTRAINT prodOrd FOREIGN KEY (product_id) REFERENCES product (product_id) 
    );
2)Insérez des données dans vos tables ( partie DML )

        INSERT INTO customer (customer_name,customer_tel) 
        VALUES 
        ('Fatou','774128632'), 
        ('Marie','772435051'), 
        ('Aziz','774019818'),
        ('Joe','778085693');
        INSERT INTO product (product_name,category,price) 
        VALUES 
        ('widget','electronique',15000), 
        ('gadget','772435051',30000),
        ('ebook','electronique',10000);
        INSERT INTO orders (customer_id,product_id,orderdate,quantity,total_amount) 
        VALUES 
        (1,2,'2024-02-21','4',60000),
        (3,1,'2023-05-13','3',90000), 
        (1,1,'2022-03-21','5',75000),
        (3,2,'2024-02-27','1',30000);
        (4,3,'2024-02-27','2',20000);
3)Écrivez une requête SQL pour récupérer les noms des clients qui ont passé une commande pour au moins un widget et au moins un gadget, ainsi que le coût total des widgets et gadgets commandés par chaque client.
 Le coût de chaque article doit être calculé en multipliant la quantité par le prix du produit.
        SELECT
            customer.customer_name,
            SUM(product.price * orders.quantity) AS Coût_Total
        FROM
            customer
        JOIN
            orders ON customer.customer_id=orders.customer_id
        JOIN
            product ON orders.product_id = product.product_id
        WHERE
            product.product_name IN ('gadget','widget')
        GROUP BY
           customer.customer_name;


4)Écrivez une requête pour récupérer les noms des clients qui ont passé une commande pour au moins un widget, ainsi que le coût total des widgets commandés par chaque client.
         SELECT
            customer.customer_name,
            SUM(product.price * orders.quantity) AS Coût_Total
        FROM
            customer
        JOIN
            orders ON customer.customer_id=orders.customer_id
        JOIN
            product ON orders.product_id = product.product_id
        WHERE
            product.product_name LIKE '%widget%'
        GROUP BY
           customer.customer_name;
5)Écrivez une requête pour récupérer les noms des clients qui ont passé une commande pour au moins un gadget, ainsi que le coût total des gadgets commandés par chaque client.
           SELECT
            customer.customer_name,
            SUM(product.price * orders.quantity) AS Coût_Total
        FROM
            customer
        JOIN
            orders ON customer.customer_id=orders.customer_id
        JOIN
            product ON orders.product_id = product.product_id
        WHERE
            product.product_name LIKE '%gadget%'
        GROUP BY
           customer.customer_name;
6)Rédigez une requête pour récupérer les noms des clients qui ont passé une commande pour au moins un doohickey, ainsi que le coût total des doohickeys commandés par chaque client.
         SELECT
            customer.customer_name,
            SUM(product.price * orders.quantity) AS Coût_Total
        FROM
            customer
        JOIN
            orders ON customer.customer_id=orders.customer_id
        JOIN
            product ON orders.product_id = product.product_id
        WHERE
            product.product_name LIKE '%doohickey%'
        GROUP BY
           customer.customer_name;
7)Écrivez une requête pour récupérer le nombre total de widgets et de gadgets commandés par chaque client, ainsi que le coût total des commandes.
        SELECT
            customer_name,SUM(quantity) AS 'Total commandé'
        FROM
            customer
        JOIN
            orders ON customer.customer_id=orders.customer_id
        JOIN
            product ON orders.product_id = product.product_id
        WHERE
            product.product_name IN ('gadget','widget')
        GROUP BY
           customer.customer_name;
8)Écrivez une requête pour récupérer les noms des produits qui ont été commandés par au moins un client, ainsi que la quantité totale de chaque produit commandé.
SELECT
            product_name,SUM(quantity) AS 'Total commandé'
        FROM
            customer
        JOIN
            orders ON customer.customer_id=orders.customer_id
        JOIN
            product ON orders.product_id = product.product_id
           
        GROUP BY
           product.product_name;
9)Rédigez une requête pour récupérer les noms des clients qui ont passé le plus de commandes, ainsi que le nombre total de commandes passées par chaque client.
SELECT 
        customer_name,COUNT(*) as nc FROM customer 
         JOIN 
            orders ON orders.customer_id=customer.customer_id
         JOIN 
            product ON product.product_id=orders.customer_id
         GROUP BY customer_name ORDER BY nc DESC LIMIT 3;
10)Écrivez une requête pour récupérer les noms des produits qui ont été commandés le plus, ainsi que la quantité totale de chaque produit commandé.
SELECT
            product_name,COUNT(*) as pc 
        FROM 
            product 
        JOIN 
            orders ON orders.product_id=product.product_id
        GROUP BY product_name ORDER BY pc DESC;
11)Écrivez une requête pour récupérer les noms des clients qui ont passé une commande chaque jour de la semaine, ainsi que le nombre total de commandes passées par chaque client.
SELECT customer_name, COUNT(DISTINCT DATE_FORMAT(orderDate, '%W')) as nombrejour 
    FROM
            customer, orders 
    WHERE
            customer.customer_id=orders.customer_id 
    GROUP BY customer.customer_id
    HAVING COUNT(DISTINCT DATE_FORMAT(orderDate, '%W'))=7;
;
                                   
